apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: "org.jmailen.kotlinter"

android {
    compileSdk 31
    defaultConfig {
        applicationId "de.beatbrot.screenshotassistant"
        minSdk 29
        targetSdk 31
        versionCode 3
        versionName "2.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            moduleName "app"
            ldLibs "log"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['jniLibs','libs']
        }
    }
    ndkVersion ndkVersion
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
    buildToolsVersion '32.0.0'
}

project.ext {
    // Check the NDK location using the same configuration options as the
    // experimental Gradle plug-in.
    ndk_dir = project.android.ndkDirectory
    if (ndk_dir == null || !ndk_dir.exists()) {
        ndk_dir = System.getenv('ANDROID_NDK_HOME')
        if (ndk_dir == null || ndk_dir.isEmpty()) {
            throw new StopActionException(
                'Android NDK directory should be specified using the ndk.dir ' +
                    'property or ANDROID_NDK_HOME environment variable.')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'jniLibs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.test:runner:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    implementation 'com.google.android.material:material:1.6.0-beta01'

    implementation 'com.github.beatbrot:ImagePainter:3c3f2b9bcc'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    implementation 'com.github.savvyapps:ToggleButtonLayout:1.3.0'
    implementation 'com.thebluealliance:spectrum:0.7.1'

    implementation 'com.github.daniel-stoneuk:material-about-library:2.4.2'
    implementation ('com.android.tools.build:gradle-core:3.1.4') {
        exclude group: 'org.antlr'
        exclude group: 'com.intellij', module: 'annotations'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-runtime'
        exclude group: 'com.android.tools.external.com-intellij'
    }

    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}

task ndkBuildCompile(type: Exec) {
    description 'Use ndk-build to compile the C++ application.'
    commandLine("${project.ext.ndk_dir}${File.separator}ndk-build",
        sprintf("APP_PLATFORM=android-%d",
            android.defaultConfig.minSdkVersion.mApiLevel))
}

task ndkBuildClean(type: Exec) {
    description 'Use ndk-build to clean the C++ application.'
    commandLine("${project.ext.ndk_dir}${File.separator}ndk-build",
        "clean")
}

// Once the Android Gradle plug-in has generated tasks, add dependencies for
// the ndk-build targets.
project.afterEvaluate {
    preBuild.dependsOn(ndkBuildCompile)
    clean.dependsOn(ndkBuildClean)
}
